#!/usr/bin/env python

import yaml
import sys

class ADOPipelineDoc:
    # Only load the file if yaml_file_path is not none. Default to none, AI!
    def __init__(self, yaml_file_path):
        self.yaml_file_path = yaml_file_path
        self.yaml_content = None
        self.load_file()

    def warn(self, message, ec=None):
        """Prints an error message to stderr and optionally exits with the given error code."""
        print(message, file=sys.stderr)

        if ec is not None:
            sys.exit(ec)

    def load_file(self):
        """
        Loads a YAML file and returns its contents as a Python dictionary.

        Returns:
            dict: The contents of the YAML file.

        Raises:
            FileNotFoundError: If the file does not exist.
            PermissionError: If there is a permission issue accessing the file.
            ValueError: If the YAML file is empty or contains null data.
            yaml.YAMLError: If there is an error parsing the YAML file.
        """
        try:
            with open(self.yaml_file_path, 'r') as file:
                data = yaml.safe_load(file)

                if data is None:
                    raise ValueError("YAML file is empty or contains null data.")

                self.yaml_content = data

        except FileNotFoundError:
            self.warn(f"Error: The file {self.yaml_file_path} was not found.", ec=1)

        except PermissionError:
            self.warn(f"Error: Permission denied for file {self.yaml_file_path}.", ec=1)

        except yaml.YAMLError as exc:
            self.warn(f"Error parsing YAML file: {exc}", ec=1)

    def get_parameters(self):
        """
        Extracts parameters from the YAML content.

        Returns:
            list: A list of parameters extracted from the YAML content.

        Raises:
            SystemExit: If no parameters are found in the YAML content.
        """
        parameters = self.yaml_content.get('parameters', [])

        if not parameters:
            self.warn("No parameters found.", ec=1)

        return parameters

    def process_data(self):
        self.load_file()
        parameters = self.get_parameters()

        # Prepare markdown table
        markdown_table = "| Name | Type | Default | Description |\n"
        markdown_table += "|------|------|---------|-------------|\n"

        for param in parameters:
            name = param.get('name', '')
            param_type = param.get('type', '')
            default = param.get('default', '')
            description = param.get('description', '')

            markdown_table += f"| {name} | {param_type} | {default} | {description} |\n"

        return markdown_table

# Example usage
yaml_processor = ADOPipelineDoc('azure-pipelines.yml')  # Replace with your YAML file path
markdown_output = yaml_processor.process_data()
print(markdown_output)
