#!/usr/bin/env python

import yaml
import sys

class ADOPipelineDocException(Exception):
    pass

class ADOPipelineDoc:
    def __init__(self, filename=None):
        self.filename = filename
        self.content = None

        if self.filename is None:
            raise ADOPipelineDocException("Filename must be provided.")

        self.load_file()
        self.get_parameters()

    def load_file(self):
        """
        Loads the YAML file specified by the filename attribute and stores its parsed contents in the content attribute.

        Raises:
            ADOPipelineDocException: If the file cannot be accessed, or if there is an error in parsing the YAML content.
        """
        try:
            with open(self.filename, 'r') as file:
                data = yaml.safe_load(file)

                if data is None:
                    raise ADOPipelineDocException("YAML file is empty or contains null data.")

# Rename content to data, AI!
                self.content = data

        except FileNotFoundError:
            raise ADOPipelineDocException(f"Error: The file {self.filename} was not found.")

        except PermissionError:
            raise ADOPipelineDocException(f"Error: Permission denied for file {self.filename}.")

        except yaml.YAMLError as exc:
            raise ADOPipelineDocException(f"Error parsing YAML file: {exc}")

    def get_parameters(self):
        """
        Extracts parameters from the YAML content.

        Returns:
            list: A list of parameters extracted from the YAML content.

        Raises:
            ADOPipelineDocException: If no parameters are found in the YAML content.
        """
        self.load_file()
        parameters = self.content.get('parameters', [])

        if not parameters:
            raise ADOPipelineDocException("No parameters found.")

        self.parameters = parameters

    def process_data(self):
        parameters = self.get_parameters()

        # Prepare markdown table
        markdown_table = "| Name | Type | Default | Description |\n"
        markdown_table += "|------|------|---------|-------------|\n"

        for param in parameters:
            name = param.get('name', '')
            param_type = param.get('type', '')
            default = param.get('default', '')
            description = param.get('description', '')

            markdown_table += f"| {name} | {param_type} | {default} | {description} |\n"

        return markdown_table

# Example usage
yaml_processor = ADOPipelineDoc('azure-pipelines.yml')  # Replace with your YAML file path
markdown_output = yaml_processor.process_data()
print(markdown_output)
